  # numeronyms
  - { trigger: ":a11y", replace: "accessibility", propagate_case: true }
  - { trigger: ":g11n", replace: "globalisation", propagate_case: true }
  - { trigger: ":i14y", replace: "interoperability", propagate_case: true }
  - { trigger: ":i18n", replace: "internationalization", propagate_case: true }
  - { trigger: ":k8s", replace: "Kubernetes" }
  - { trigger: ":l10n", replace: "localisation", propagate_case: true }
  - { trigger: ":m12n", replace: "modularisation", propagate_case: true }
  - { trigger: ":o11y", replace: "observability", propagate_case: true }
  - { trigger: ":p13n", replace: "personalization", propagate_case: true }
  - { trigger: ":p8s", replace: "Prometheus" }
  - { trigger: ":s5n", replace: "shorten", propagate_case: true }
  - { trigger: ":tr8n", replace: "translation", propagate_case: true }
  - { trigger: ":v11n", replace: "versification", propagate_case: true }
  - { trigger: ":v8n", replace: "validation", propagate_case: true }
  # Work abbr
  - { trigger: "abbr", replace: "abbreviation", word: true, propagate_case: true }
  - { trigger: "afaik", replace: "as far as I know", word: true, propagate_case: true }
  - { trigger: "afk", replace: "away from keyboard", word: true, propagate_case: true }
  - { trigger: "appr", replace: "approximately", word: true, propagate_case: true }
  - { trigger: "appx", replace: "appendix", word: true, propagate_case: true }
  - { trigger: "asap", replace: "as soon as possible", word: true, propagate_case: true }
  - { trigger: "atm", replace: "at the moment", word: true, propagate_case: true }
  - { trigger: "brb", replace: "be right back", word: true, propagate_case: true }
  - { trigger: "btw", replace: "by the way", word: true, propagate_case: true }
  - { trigger: "cil", replace: "comments in line", word: true, propagate_case: true }
  - { trigger: "fyi", replace: "for your information", word: true, propagate_case: true }
  - { trigger: "ic", replace: "I see", word: true, propagate_case: true }
  - { trigger: "idk", replace: "I don't know", word: true, propagate_case: true }
  - { trigger: "imho", replace: "in my honest opinion", word: true, propagate_case: true }
  - { trigger: "imo", replace: "in my opinion", word: true, propagate_case: true }
  - { trigger: "lgtm", replace: "looks good to me", word: true, propagate_case: true }
  - { trigger: "lmk", replace: "let me know", word: true, propagate_case: true }
  - { trigger: "misc", replace: "miscellaneous", word: true, propagate_case: true }
  - { trigger: "np", replace: "no problem", word: true, propagate_case: true }
  # - { trigger: "nvm", replace: "never mind", word: true, propagate_case: true } Can't use because "nvm" is a software I use
  - { trigger: "obv", replace: "obviously", word: true, propagate_case: true }
  - { trigger: "ofc", replace: "of course", word: true, propagate_case: true }
  - { trigger: "omw", replace: "on my way", word: true, propagate_case: true }
  - { trigger: "ootb", replace: "out of the box", word: true, propagate_case: true }
  - { trigger: "rn", replace: "right now", word: true, propagate_case: true }
  - { trigger: "tbh", replace: "to be honest", word: true, propagate_case: true }
  - { trigger: "tnx", replace: "thank you", word: true, propagate_case: true }
  - { trigger: "ty", replace: "thank you", word: true, propagate_case: true }
  - { trigger: "wdyt", replace: "what do you think", word: true, propagate_case: true }
  # Henglish
  - { trigger: "◊ò◊ß◊ì", replace: "yes", word: true }
  - { trigger: "fi", replace: "◊õ◊ü", word: true }
  - { trigger: "◊û◊ù", replace: "no", word: true }
  - { trigger: "kt", replace: "◊ú◊ê", word: true }
  # espanso-fractions
  - { trigger: "1/4", replace: "¬º", word: true }
  - { trigger: "1/2", replace: "¬Ω", word: true }
  - { trigger: "3/4", replace: "¬æ", word: true }
  - { trigger: "1/7", replace: "‚Öê", word: true }
  - { trigger: "1/9", replace: "‚Öë", word: true }
  - { trigger: "1/10", replace: "‚Öí", word: true }
  - { trigger: "1/3", replace: "‚Öì", word: true }
  - { trigger: "2/3", replace: "‚Öî", word: true }
  - { trigger: "1/5", replace: "‚Öï", word: true }
  - { trigger: "2/5", replace: "‚Öñ", word: true }
  - { trigger: "3/5", replace: "‚Öó", word: true }
  - { trigger: "4/5", replace: "‚Öò", word: true }
  - { trigger: "1/6", replace: "‚Öô", word: true }
  - { trigger: "5/6", replace: "‚Öö", word: true }
  - { trigger: "1/8", replace: "‚Öõ", word: true }
  - { trigger: "3/8", replace: "‚Öú", word: true }
  - { trigger: "5/8", replace: "‚Öù", word: true }
  - { trigger: "7/8", replace: "‚Öû", word: true }
  # Measurements
  - { trigger: ":ms", replace: "milliseconds" }
  - { trigger: ":mm", replace: "millimetres" }
  - { trigger: ":cm", replace: "centimetres" }
  # Emoji
  - { trigger: ":check", replace: "‚úîÔ∏é" }
  - { trigger: ":x", replace: "‚úò" }
  - { trigger: ":by", replace: "√ó" }
  - { trigger: ":star", replace: "‚≠êÔ∏è" }
  - { trigger: ":coffee", replace: "‚òïÔ∏è" }
  - { trigger: ":smile", replace: "üòÄ" }
  - { trigger: ":lol", replace: "üòÜ" }
  - { trigger: ":lint", replace: "üëï" }
  - { trigger: ":doc", replace: "üìò" }
  - { trigger: ":box", replace: "üì¶" }
  - { trigger: ":police", replace: "üëÆ" }
  - { trigger: ":ninja", replace: "ü•∑" }
  - { trigger: ":bulb", replace: "üí°" }
  - { trigger: ":heart", replace: "‚ù§Ô∏è" }
  - { trigger: ":ok:", replace: "üëå" }
  - { trigger: ":okay:", replace: "üëå" }
  - { trigger: ":shrug:", replace: "ü§∑" }
  - { trigger: ":dot", replace: "¬∑" }
  - { trigger: ":em", replace: "‚ÄÉ" }
  - { trigger: ":nbsp", replace: "‚ÄÉ" }
  - { trigger: ":  :", replace: "‚ÄÉ" }
  - { trigger: ":dash", replace: "‚Äî" }
  - { trigger: ":--:", replace: "‚Äî" }
  - { trigger: ":makaf", replace: "÷æ" }
  - { trigger: ":__", replace: "÷æ" }
  - { trigger: ":darr", replace: "‚Üì" }
  - { trigger: ":rarr", replace: "‚Üí" }
  - { trigger: ":larr", replace: "‚Üê" }
  - { trigger: ":uarr", replace: "‚Üë" }
  - { trigger: ":->", replace: "‚Üí" }
  - { trigger: ":<-", replace: "‚Üê" }
  - { trigger: ":=>", replace: "‚áí" }
  - { trigger: ":<=", replace: "‚áê" }
  - { trigger: ":...", replace: "‚Ä¶" }
  - { trigger: ":ellip", replace: "‚Ä¶" }
  - { trigger: ":no", replace: "‚Ññ" }
  - { trigger: ":pound", replace: "¬£" }
  - { trigger: ":gbp", replace: "¬£" }
  - { trigger: ":euro", replace: "‚Ç¨" }
  - { trigger: ":cent", replace: "¬¢" }
  - { trigger: ":nis", replace: "‚Ç™" }
  - { trigger: ":tm", replace: "‚Ñ¢" }
  - { trigger: ":deg", replace: "¬∞" }
  - { trigger: "(c)", replace: "¬©" }
  - { trigger: "(r)", replace: "¬Æ" }
  # UK Keyboard quirks
  - triggers: [ ":hash", ":¬£" ]
    replace: "#"
  # git
  - trigger: ":branch"
    replace: "git rev-parse --abbrev-ref HEAD"
  # tpyo
  - triggers: [ "comit", "commmit" ]
    replace: "commit"
    word: true
  - triggers: [ "bim", "vi" ]
    replace: "vim"
    word: true
  # Sysadmin
  - trigger: ":du"
    replace: "sudo du -sh * | sort -h | tail"
  - trigger: ":port"
    replace: "lsof -i -P | grep -i listen"
  - trigger: ":statsd"
    replace: "sudo tcpdump udp -u port 8125 -A"
  - trigger: ":graphite"
    replace: "sudo tcpdump -u port 2003 -A"
  - trigger: ":ports"
    replace: "lsof -i -P | grep -i listen"
  - trigger: ":addr"
    replace: "ipconfig getifaddr en0"
  - trigger: ":arm"
    replace: "arch -arm64"
  - trigger: ":arch"
    replace: "arch -x86_64"
  # kubectl
  - trigger: ":ktail"
    replace: "kubectl logs --follow"
  # Templates
  - trigger: ":tst"
    replace: "describe('', () => {\ntest('', () => {$|$});\n});"
  - trigger: ":license"
    replace: "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org/>"
  - trigger: ":editorconfig"
    replace: "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\nindent_style = tab\ntab_width = 2\n\n[*.{yml,json}]\nindent_size = 2\nindent_style = space\n"
  - trigger: ":err"
    replace: "(() => {script = document.createElement('script');\nscript.textContent = `\npromise = () => new Promise((resolve, reject) => reject(new Error('Oh No!')));\npromise();\n\nerror = new Error(\"Something must have gone terribly wrong. ${Date.now()}\");\nerror.details = { package: 'my-package-name' };\nthrow error;\n`;\ndocument.body.appendChild(script);\n})();\n"
  - trigger: ":box"
    replace: "‚îå‚îÄ‚î¨‚îÄ‚îê\n‚îÇ ‚îÇ ‚îÇ\n‚îú‚îÄ‚îº‚îÄ‚î§\n‚îÇ ‚îÇ ‚îÇ\n‚îî‚îÄ‚î¥‚îÄ‚îò"
  - trigger: ":bash"
    replace: "#!/usr/bin/env bash"
  # browsing
  - trigger: ":reader"
    replace: "about:reader?url="
  # epub
  - trigger: ":rtl"
    replace: "page-progression-direction=\"rtl\""
  - trigger: ":ebook"
    replace: "( (class|dir|alt|title|style)=\"[^\"]*\"|</?span>|<p></p>)"
  # Generic
  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d"
  - trigger: ":ts"
    replace: "{{value}}"
    vars:
      - name: value
        type: date
        params:
          format: "%Y-%m-%d\ %H:%M"
  - trigger: ":time"
    replace: "{{value}}"
    vars:
      - name: value
        type: date
        params:
          format: "%Y-%m-%d\ %H:%M:%S"
  - trigger: ":sdate"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "date -s '%Y-%m-%d %H:%M:%S'"
  - trigger: ":ip"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "curl ifconfig.me"
  - trigger: ":pwd"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "openssl rand -base64 18"
